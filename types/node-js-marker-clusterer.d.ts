export = markerclusterer;
declare class markerclusterer {
  constructor(map: any, opt_markers: any, opt_options: any);
  map_: any;
  markers_: any;
  clusters_: any;
  sizes: any;
  styles_: any;
  ready_: any;
  gridSize_: any;
  minClusterSize_: any;
  maxZoom_: any;
  imagePath_: any;
  imageExtension_: any;
  zoomOnClick_: any;
  averageCenter_: any;
  prevZoom_: any;
  addMarker(marker: any, opt_nodraw: any): void;
  addMarkers(markers: any, opt_nodraw: any): void;
  addToClosestCluster_(marker: any): void;
  calculator_(markers: any, numStyles: any): any;
  clearMarkers(): void;
  createClusters_(): void;
  distanceBetweenPoints_(p1: any, p2: any): any;
  draw(): void;
  extend(obj1: any, obj2: any): any;
  fitMapToMarkers(): void;
  getCalculator(): any;
  getExtendedBounds(bounds: any): any;
  getGridSize(): any;
  getMap(): any;
  getMarkers(): any;
  getMaxZoom(): any;
  getMinClusterSize(): any;
  getStyles(): any;
  getTotalClusters(): any;
  getTotalMarkers(): any;
  isAverageCenter(): any;
  isMarkerInBounds_(marker: any, bounds: any): any;
  isZoomOnClick(): any;
  onAdd(): void;
  pushMarkerTo_(marker: any): void;
  redraw(): void;
  removeMarker(marker: any, opt_nodraw: any): any;
  removeMarker_(marker: any): any;
  removeMarkers(markers: any, opt_nodraw: any): any;
  repaint(): void;
  resetViewport(opt_hide: any): void;
  setCalculator(calculator: any): void;
  setGridSize(size: any): void;
  setMap(map: any): void;
  setMaxZoom(maxZoom: any): void;
  setMinClusterSize(size: any): void;
  setReady_(ready: any): void;
  setStyles(styles: any): void;
  setupStyles_(): void;
}
